# 1 Провести простые операции с числами

import math as ma
import time
time.time()
exponenta = ma.e
print(exponenta)

import numpy as np
your_array = np.array([1,2,3])
print(your_array)

a = 5
b = 10

alpha = betta = gamma = 35
#gamma = 55

print(alpha, betta, gamma)

c = a + b
d = a - b
e = a * b
f = a / b
g = a ** b
j = a // b
k = a % b
print (c,d,e,f,g,j,k)
print('Сумма c, = a + b =', c)
print('Разность, d  = a - b =', d)
print('Умножение, e = a * b =', e)
print('Деление, f = a / b =', f)
print('Возведение в степень, g = a ** b =', g)
print('Деление без остатка, j = a // b =', j)
print('Возведение в степень, k = a % b =', k)

a = 1; b = 2; print('Сложение a и b равно ', a+b) #Можно хадавать операции в одну строку

## 2 Провести сравнение чисел ##

print(a>b) #Больше
print(a<b) #Меньше
print(a>=b) #Больше или равно
print(a<=b) #Меньше или равно
print(a==b) #Сравнение/ равно или нет
print(a!=b) #НЕ равно или нет

## 3 Сокращение кода с помощью специального синтаксиса Python. ##
# Часто используется для счетчиков и прочее

a+=b
print(a) #прибавить к a значение b и т.д
a = 5; b = 4
a-=b
print(a)
a = 5; b = 4
a*=b
print(a)
a = 5; b = 4
a/=b # разделить var на значение value
print(a)
a = 5; b = 4
a//=b # выполнить деление с остатком и происвоить его левой части
print(a)
a = 5; b = 4
a%=b # найти остаток и присвоить его левой части
print(a)

## 4 Реализация математического выражения с множеством математических операций ##

zetta = (alpha * ma.e**betta * (gamma + 25**32))/2 + 0.32 * alpha - gamma
print(zetta)

## 5 Особенности записи названия переменных
# Имена переменных могут содержать любые заглавные и строчные английские буквы,
# цифры. Имена переменных не могут начиться с цифры. Предпочтительно называть
# переменны со строчных букв. Это связанно с тем что заглавными буква называют
# модули и классы для упрощения чтения кода. Стоит отметить, что в языке Python
# важным является различие заглавных и строчных букв.
# Проверим это утверждение с помощью кода

x = 5
print(x)
print(X)

## 6. Коментирование выражений кода
#Код может быть достаточно большим с большим количеством переменных,
# что затрудняет работу с ним, так как необходимо помнить обозначение
# каждой переменной. Важно писать объяснение к коду или переменным в коде
# для того чтобы пользователь мог воспользоваться им в будующем.
# Для этого в зяыке Python используют такую конструкцию, как комментарии.
# Вызов этой конструкции осуществляется с помощью операторов
"""Здесь мы приведем код норма́льного распределе́ния
   Формула нормального распределения 
   f(x) = 1/(sigma * sqrt(2*pi)) * exp(-1/2 * ((x-mu)/sigma)**2)
   where mu - математическое ожидание
   sigma -  среднеквадратическое отклонение"""
sigma = 1 # математическое ожидание
mu = 0  # среднеквадратическое отклонение

x = 5 # значение x

# функция Распределения
f = 1/(sigma*ma.sqrt(2*ma.pi)) * ma.exp(-0.5 * ((x - mu)/ sigma)**2)


