"""–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ No 6. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Python —Ñ—É–Ω–∫—Ü–∏–π
–≤ —Ä–∞—Å—á–µ—Ç–∞—Ö –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö –∑–∞–¥–∞—á."""

import math as ma
import matplotlib.pyplot as plt

"""–¶–µ–ª—å —Ä–∞–±–æ—Ç—ã - —Å–æ–∑–¥–∞–≤–∞—Ç—å Python —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –ø—Ä–∏–º–µ–Ω—è—Ç—å –∏—Ö –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö –∑–∞–¥–∞—á.

–ó–∞–¥–∞—á–∏:

–ó–∞–¥–∞—á–∞ 1. –ù–∞–ø–∏—Å–∞—Ç—å –∫–æ–¥ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ —Ü–µ–ø–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ç–æ–∫–∞. –°–¥–µ–ª–∞—Ç—å
–ø—Ä–æ–≤–µ—Ä–∫—É —Ä–µ—à–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –±–∞–ª–∞–Ω—Å–∞ –º–æ—â–Ω–æ—Å—Ç–µ–π.

–ó–∞–¥–∞—á–∞ 2. –ù–∞–ø–∏—Å–∞—Ç—å –∫–æ–¥ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ —Ü–µ–ø–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ç–æ–∫–∞, –∏—Å–ø–æ–ª—å–∑—É—è
–∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è. –°–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Ä–µ—à–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö
–≤—ã—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –±–∞–ª–∞–Ω—Å–∞ –º–æ—â–Ω–æ—Å—Ç–µ–π.

–ó–∞–¥–∞—á–∞ 3. –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ü–µ–ø—å –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ç–æ–∫–∞, –∏—Å–ø–æ–ª—å–∑—É—è –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ç–æ–∫–∞ –∏
–Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é —Ç–∏–ø–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–∞—Å—Å–∏–≤. –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏.

–ò–º–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è

–§—É–Ω–∫—Ü–∏—è –≤ python - –æ–±—ä–µ–∫—Ç, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π –∑–Ω–∞—á–µ–Ω–∏–µ.
–û–±—ã—á–Ω–æ —Ñ—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ def. –ö–æ–º–∞–Ω–¥–∞ return
—É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. Python —Ñ—É–Ω–∫—Ü–∏—è –º–æ–∂–µ—Ç
–≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ª—é–±—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –æ–±—ä–µ–∫—Ç –∏ –¥–∞–∂–µ —Ñ—É–Ω–∫—Ü–∏—é. –ü—Ä–∏–º–µ—Ä –ø—Ä–æ—Å—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏"""

# def myFun(x,y):
#     return x + y
# print(myFun(10, 5))

#–§—É–Ω–∫—Ü–∏—è –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å –∫–æ–º–∞–Ω–¥—É return.

# def helloWorldFun():
#     print('hello world')
# fun1 = helloWorldFun()
# print(fun)

"""–¢–æ–≥–¥–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è fun –±—É–¥–µ—Ç –∏–º–µ—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é None."""


# def helloWorldFun():
#     print('hello world')
#
#
# fun2 = helloWorldFun()
# print(fun)

"""–ê—Ä–≥—É–º–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏"""

"""–§—É–Ω–∫—Ü–∏—è –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤. –°—Ç–æ–∏—Ç –æ—Ç–º–µ—Ç–∏—Ç—å,
—á—Ç–æ –µ—Å—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ. –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—É—ã–µ
–∞—Ä–≥—É–º–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è —á–µ—Ä–µ–∑ –æ–ø–µ—Ä–∞—Ç–æ—Ä –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è –ø—Ä–∏ –µ–µ —Å–æ–∑–¥–∞–Ω–∏–∏."""

# def newFun(a, b, c, d = 5, e = 'test'):
#     print(a, b, c ,d ,e)
#
# print(newFun(1, 4, 3, e = 'other'))

"""–ú–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã—Ö –∏ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã—Ö
–∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤. –î–ª—è –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–µ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
–∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ *args, –∞ –¥–ª—è –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã—Ö **kwargs. –¢–æ–≥–¥–∞ –≤ —Ç–µ–ª–µ —Ü–∏–∫–ª–∞
–±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ args (—ç—Ç–æ –∫–æ—Ä—Ç–µ–∂ —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏) –∏ kwargs
(—ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å, –≥–¥–µ –∫–ª—é—á –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ
–ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π)"""

# def newFun(*args, **kwargs):
#     print(args, kwargs)
#     return args, kwargs
#
# s = newFun(1, 'dva', (32, 33), k = 2, d = 'tri')
# print(s)

"""–ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–π –∞–º–ø–ª–∏—Ç—É–¥—ã, –≤—Ä–µ–º–µ–Ω–∏ –∏ —á–∞—Å—Ç–æ—Ç—ã –∏
–≤—ã–¥–∞–µ—Ç —Ä–∞—Åc—á–∏—Ç–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —Ñ–æ—Ä–º—É–ª–µ ùë¢ = ùëàùëöùëéùë•ùëêùëúùë†(2ùúãùëì1ùë°). –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫
—ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏."""


u_max = 220
f1 = 50
def source(u_max, time, freq):
    """–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º
    –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º:
    u_max - –∞–º–ø–ª–∏—Ç—É–¥–∞
    time - —Ç–µ–∫—É—â–µ–µ –≤–µ—Ä–º—è,
    freq -—á–∞—Å—Ç–æ—Ç–∞"""
    return u_max * ma.cos(2 * ma.pi * freq * time)

data = ([source(u_max, t/1000, f1) for t in range(100)] , [t/1000 for t in range(100)])

plt.plot(data[1], data[0])
plt.show()

source.__doc__

'–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º\n –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º:\n u_max - –∞–º–ø–ª–∏—Ç—É–¥–∞\n time - —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è,\n freq -—á–∞—Å—Ç–æ—Ç–∞'

"""
1. –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤—Ä–µ–º–µ–Ω–∏ –∫–∞–∫ —Ç–∏–ø
–ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å–ø–∏—Å–æ–∫. –ù–∞ –≤—Ö–æ–¥–µ —ç—Ç–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –ø–æ–ª—É—á–∞–µ—Ç –Ω—É–ª–µ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
–≤—Ä–µ–º–µ–Ω–∏, –∫–æ–Ω–µ—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫ –≤ —ç—Ç–æ–π
–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤—ã–¥–∞–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
–≤—Ä–µ–º–µ–Ω–∏.
2. –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –≤—ã–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏, —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–º–∏ –ø–æ
—Ñ–æ—Ä–º—É–ª–µ ùë¢ = ùëàùëöùëéùë•ùëêùëúùë†(2ùúãùëì1ùë°). –ê—Ä–≥—É–º–µ–Ω—Ç—ã —É —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å
–∞–º–ø–ª–∏—Ç—É–¥–∞, —Å–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–π –≤—Ä–µ–º–µ–Ω–∏ –∏ —á–∞—Å—Ç–æ—Ç–∞."""

def CreateTimeList(t_start, t_stop, points = 100):
    time_list = [t_start]
    step = (t_stop - t_start) / points
    for i in range(points):
        time_list.append(time_list[i]+step)
    return time_list

a = CreateTimeList(1,10,100)
print(a)


def source_list(u_max, time_list, freq):
    data = []
    for t in time_list:
        value = u_max * ma.cos(2* ma.pi * freq * t)
        data.append(value)
    return data

time_list = CreateTimeList(0, 0.1, points=100)
data = source_list(u_max, time_list, f1)
print(time_list, data)
plt.plot(time_list, data)
plt.show()


"""Lambda-—Ñ—É–Ω–∫—Ü–∏–∏"""

"""–õ—é–±–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–∏–ø–∞
def myFun(agr1, arg2, argN ...):
    <code>
    return expression
–º–æ–∂–µ—Ç –±—ã—Ç—å –ø–µ—Ä–µ–ø–∏—Å–∞–Ω–∞ –≤ –±–æ–ª–µ–µ –∫–æ–º–ø–∞–∫—Ç–Ω–æ–º –≤–∏–¥–µ, –∏—Å–ø–æ–ª—å–∑—É—è Lambda-—Ñ—É–Ω–∫—Ü–∏–∏.
myFun = lambda arg1, arg2, argN, ...: expression"""

def orderFun(x, order=2):
    return x ** order

orderFun_lambda = lambda x, order: x**order

y1 = []
y2 = []

x_list = range(10)
for x in x_list:
    y1.append(orderFun(x, 2))
    y2.append(orderFun_lambda(x, 2))

plt.plot(x_list, y1, x_list, y2)
plt.show()

def L(x, n):
    s = 0
    for i in range (1, n+1):
        s += (1.0/i)*(x/(1.0+x))**i
    return s

"""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π. –í—ã–≤–µ—Å—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—á–µ—Ç–∞–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞ —Å–ø–∏—Å–∫–æ–≤"""

def combinations_from_list_of_lists(*args: list) -> list:

    #–†–∞—Å—á—ë—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—á–µ—Ç–∞–Ω–∏–π —Å–ø–∏—Å–∫–æ–≤)

    args = list(args)
    sum_length = len(args[0])
    for i in range(1, len(args)):
        sum_length *= len(args[i])

    #–†–∞—Å—á—ë—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—á–µ—Ç–∞–Ω–∏–π —Å–ø–∏—Å–∫–æ–≤)

    if len(args) == 1:
        return args[0]

    #–ù–∞—á–∞–ª–æ —Ä–∞—Å—á—ë—Ç–∞

    res = []
    for i in range(len(args[0])):
        prom = []
        for j in range(len(args[1])):
            prom.append(args[0][i])
            prom.append(args[1][j])
            res.append(prom)
            prom = []
    args.pop(1)
    args[0] = res

    #–¶–∏–∫–ª –¥–æ–±–∞–≤–ª—è—é—â–∏–π –≤ —Å–ø–∏—Å–∫–∏ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–¥—Å–ø–∏—Å–∫–∞ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–¥—Å–ø–∏—Å–∫–∞ (–ø–µ—Ä–µ–±–æ—Ä)
    #–¢–∞–∫–∂–µ –æ–Ω –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç —Ä–µ–∑–ª—å—Ç–∞—Ç –ø–µ—Ä–≤–æ–º—É –ø–æ–¥—Å–ø–∏—Å–∫—É –∏ —É–¥–∞–ª—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π
    #–ü–æ–∫–∞ –¥–ª–∏–Ω–∞ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–¥—Å–ø–∏—Å–∫–∞ –º–µ–Ω—å—à–µ —Å—É–º–º–∞—Ä–Ω–æ–π –¥–ª–∏–Ω—ã

    while len(args[0]) < sum_length:
        prom = []
        for i in range(len(args[0])):
            for j in range(len(args[1])):
                srom = args[0][i].copy()
                srom.append(args[1][j])
                prom.append(srom)
        args[0] = prom
        args.pop(1)

    return args[0]

a = combinations_from_list_of_lists([1, 2, 3], [4, 6, 6, 6])
print()
print(a)